{%- style -%}
  .fh-section--faq-new .list-item {
    display: flex;
    flex-direction: row;
    min-height: 50vw;
    max-height: 600px
  }

  .fh-section--faq-new .list-item .content {
    padding: 60px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
    color: #ffffff;
    width: 50%;
  }

  .fh-section--faq-new .list-item .content button{
    position: relative;
    width: 100%;
    text-align: left !important;
    padding: 11px 35px 11px 0;
    border-bottom: solid 1px #000000;
  }

  .fh-section--faq-new .list-item .content p {
    max-width: 100%;
    width: 500px;
  }

  .fh-section--faq-new .list-item .content .background {
    position: absolute;
    width: 100%;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }

  .fh-section--faq-new .list-item .content .background img {
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    width: 100%;
  }

  .fh-section--faq-new  .list-item .content .background:after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background: linear-gradient(0deg, rgba(0,0,0,.65) 0%, rgba(255,255,255,0) 100%);
  }

  @media only screen and (max-width: 768px) {
    .fh-section--faq-new .list-item {
      min-height: 0;
      max-height: unset;
      flex-direction: column !important;
    }

    .fh-section--faq-new .list-item .content {
      padding: 40px 20px;
      width: 100%;
      min-height: 100vw;
    }
  }

  /* MODAL */
  .modal {
    position: fixed;
    width: 100vw;
    height: 100vh;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    top: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .modal.open {
    visibility: visible;
    opacity: 1;
    transition-delay: 0s;
  }
  .modal-bg {
    position: absolute;
    background: teal;
    width: 100%;
    height: 100%;
  }
  .modal-container {
    border-radius: 10px;
    background: #fff;
    position: relative;
    padding: 30px;
  }
  .modal-close {
    position: absolute;
    right: 15px;
    top: 15px;
    outline: none;
    appearance: none;
    color: red;
    background: none;
    border: 0px;
    font-weight: bold;
    cursor: pointer;
  }
{%- endstyle -%}

{% javascript %}
  const modals = document.querySelectorAll("[data-modal]");

  modals.forEach(function (trigger) {
    trigger.addEventListener("click", function (event) {
      event.preventDefault();
      const modal = document.getElementById(trigger.dataset.modal);
      modal.classList.add("open");
      const exits = modal.querySelectorAll(".modal-exit");
      exits.forEach(function (exit) {
        exit.addEventListener("click", function (event) {
          event.preventDefault();
          modal.classList.remove("open");
        });
      });
    });
  });
{% endjavascript %}

<div
  data-section-id="{{ section.id }}"
  data-section-type="fh-section-faq-new"
  class="fh-section--faq-new">
  {%- if section.blocks.size > 0 -%}
    <script type="application/ld+json">
      {
      "@context": "https://schema.org",
                                                      "@type": "FAQPage",
                                                      "mainEntity": [
      {% for block in section.blocks %}
        {% case block.type %}
          {% when 'question' %}
          {
          "@type": "Question",
                                                                                          "name": {{ block.settings.title | json }},
          "acceptedAnswer": {
                                                                                          "@type": "Answer",
                                                                                          "text": {{ block.settings.text | json }}
          }
          }{% unless forloop.last %},{% endunless %}
        {% endcase %}
      {% endfor %}
      ]
      }
    </script>

    <div
      class="list-item"
      {%- if section.settings.reverse -%}
      style="flex-direction: row-reverse; "
      {%- endif -%}>
      {% comment %} Content Left {% endcomment %}
      <div
        class="content content-left"
        style="background-color: {{ section.settings.background_color }}; color: {{ section.settings.text_color }};"
        data-aos>
        {%- for block in section.blocks -%}
          <button type="button" data-modal="modal-one" data-text="{{ block.settings.text | escape }}" data-title="{{ block.settings.title }}">
            <span class="collapsible-trigger__icon collapsible-trigger__icon--open" role="presentation">
              <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-plus" viewBox="0 0 20 20"><path fill="#444" d="M17.409 8.929h-6.695V2.258c0-.566-.506-1.029-1.071-1.029s-1.071.463-1.071 1.029v6.671H1.967C1.401 8.929.938 9.435.938 10s.463 1.071 1.029 1.071h6.605V17.7c0 .566.506 1.029 1.071 1.029s1.071-.463 1.071-1.029v-6.629h6.695c.566 0 1.029-.506 1.029-1.071s-.463-1.071-1.029-1.071z"></path></svg>
            </span>
            <span class="h3">{{ block.settings.title }}</span>
          </button>
          <div class="modal" id="modal-one">
            <div class="modal-bg modal-exit"></div>
            <div class="modal-container">
              <h1>Amazing Modal</h1>
              <h2>Pure Vanilla JavaScript</h2>
              <button class="modal-close modal-exit">X</button>
            </div>
          </div>
        {%- endfor -%}
      </div>

      {% comment %} Content Right {% endcomment %}
      <div class="content content-right" data-aos>
        {%- if section.settings.as_background -%}
          <div class="background">
            {%-
                render 'image-element',
              img: section.settings.image,
              classes: 'image-background',
              sizes: sizes,
              sizeVariable: sizeVariable,
              fallback: fallback -%}
          </div>
        {%- else -%}
          {%-
            render 'image-element',
          img: section.settings.image,
          classes: 'image-background',
          sizes: sizes,
          sizeVariable: sizeVariable,
          fallback: fallback -%}
        {%- endif -%}

      </div>
    </div>
  {%- endif -%}
</div>

{% schema %}
  {
    "name": "FAQ New",
    "settings": [
      {
        "type": "checkbox",
        "id": "reverse",
        "label": "Reverse",
        "default": false
      }, {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      }, 
      {
        "type": "checkbox",
        "id": "as_background",
        "label": "Set Image as Background",
        "default": true
      },{
        "type": "color",
        "id": "background_color",
        "label": "Background",
        "default": "#000000"
      }, {
        "type": "color",
        "id": "text_color",
        "label": "Text color",
        "default": "#ffffff"
      }
    ],
    "presets": [
      {
        "name": "FAQ New"
      }
    ],
    "blocks": [
      {
        "type": "question",
        "name": "t:sections.faq.blocks.question.name",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "t:sections.faq.blocks.question.settings.title.label",
            "default": "Frequently asked question"
          }, {
            "type": "richtext",
            "id": "text",
            "label": "t:sections.faq.blocks.question.settings.text.label",
            "default": "<p>Use this text to answer questions in as much detail as possible for your customers.</p>"
          }
        ]
      }
    ],
    "disabled_on": {
      "groups": ["custom.popups"]
    }
  }
{% endschema %}